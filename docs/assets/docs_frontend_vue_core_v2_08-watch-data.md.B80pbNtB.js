import{_ as a,c as t,o,ag as i}from"./chunks/framework.ko2zIC2c.js";const p=JSON.parse('{"title":"Vue2 监视数据","description":"Vue2, Vue2监视数据原理, Vue.js, Vue2教程, Vue2从入门到精通","frontmatter":{"title":"Vue2 监视数据","description":"Vue2, Vue2监视数据原理, Vue.js, Vue2教程, Vue2从入门到精通"},"headers":[],"relativePath":"docs/frontend/vue/core/v2/08-watch-data.md","filePath":"docs/frontend/vue/core/v2/08-watch-data.md","lastUpdated":1754039919000}'),d={name:"docs/frontend/vue/core/v2/08-watch-data.md"};function s(c,e,l,r,n,u){return o(),t("div",null,e[0]||(e[0]=[i(`<h1 id="监视数据原理" tabindex="-1">监视数据原理 <a class="header-anchor" href="#监视数据原理" aria-label="Permalink to &quot;监视数据原理&quot;">​</a></h1><p><code>Vue</code>会监视<code>data</code>中所有层次的数据</p><h2 id="监视对象" tabindex="-1">监视对象 <a class="header-anchor" href="#监视对象" aria-label="Permalink to &quot;监视对象&quot;">​</a></h2><p>通过<code>setter</code>实现监视, 且要在<code>new Vue</code>时就传入要监视的数据</p><ul><li>通过<code>obj.xxx</code>添加的属性, <code>Vue</code>默认不做响应式处理</li><li>如需给后添加的属性做响应式, 需要使用如下<code>API</code>:</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Vue.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(target, key, value)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vm.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(target, key, value)</span></span></code></pre></div><h2 id="监视数组" tabindex="-1">监视数组 <a class="header-anchor" href="#监视数组" aria-label="Permalink to &quot;监视数组&quot;">​</a></h2><p>通过包裹数组更新元素的方法实现, 本质就是做了如下两件事:</p><ul><li>调用原生对应的方法对数组进行处理更新</li><li>重新解析模板, 进而更新页面</li></ul><h2 id="在-vue-中修改数组" tabindex="-1">在 Vue 中修改数组 <a class="header-anchor" href="#在-vue-中修改数组" aria-label="Permalink to &quot;在 Vue 中修改数组&quot;">​</a></h2><p>相关<code>API</code>:</p><ul><li><code>push()</code></li><li><code>pop()</code></li><li><code>shift()</code></li><li><code>unshift()</code></li><li><code>splice()</code></li><li><code>sort()</code></li><li><code>reverse()</code></li><li><code>Vue.set(target, key, value)</code>或<code>vm.$set(target, key, value)</code></li></ul><div class="warning custom-block"><p class="custom-block-title">特别注意</p><ul><li><code>Vue.set()</code>和<code>vm.$set()</code>不能给<code>vm</code>或<code>vm</code>的根数据对象添加属性</li><li>将<code>Vue</code>实例中的<code>data</code>改为<code>_data</code>中的数据及<code>getter</code>和<code>setter</code>的形式叫做数据劫持</li></ul></div>`,13)]))}const k=a(d,[["render",s]]);export{p as __pageData,k as default};
