import{_ as o,c,o as t,ag as d}from"./chunks/framework.ko2zIC2c.js";const a="/images/vue/v2/lifecycle.png",_=JSON.parse('{"title":"Vue2 生命周期","description":"Vue2, Vue2生命周期, Vue.js, Vue2教程, Vue2从入门到精通","frontmatter":{"title":"Vue2 生命周期","description":"Vue2, Vue2生命周期, Vue.js, Vue2教程, Vue2从入门到精通"},"headers":[],"relativePath":"docs/frontend/vue/core/v2/12-lifecycle.md","filePath":"docs/frontend/vue/core/v2/12-lifecycle.md","lastUpdated":1754039919000}'),l={name:"docs/frontend/vue/core/v2/12-lifecycle.md"};function i(r,e,u,s,n,p){return t(),c("div",null,e[0]||(e[0]=[d('<h1 id="生命周期" tabindex="-1">生命周期 <a class="header-anchor" href="#生命周期" aria-label="Permalink to &quot;生命周期&quot;">​</a></h1><p>生命周期又名: 生命周期回调函数、生命周期函数、生命周期钩子</p><p>指的是<code>Vue</code>在关键时刻调用的一些特殊名称的函数</p><p>生命周期函数的名字不可更改, 但函数的具体内容是开发者根据需求编写的</p><p>生命周期函数中的<code>this</code>指向的是<code>Vue</code>实例对象</p><h2 id="生命周期图解" tabindex="-1">生命周期图解 <a class="header-anchor" href="#生命周期图解" aria-label="Permalink to &quot;生命周期图解&quot;">​</a></h2><p><img src="'+a+'" alt="Lifecycle"></p><h2 id="生命周期各个阶段" tabindex="-1">生命周期各个阶段 <a class="header-anchor" href="#生命周期各个阶段" aria-label="Permalink to &quot;生命周期各个阶段&quot;">​</a></h2><ul><li>将要创建 ==&gt; 调用<code>beforeCreate</code>函数</li><li>创建完成 ==&gt; 调用<code>created</code>函数</li><li>将要挂载 ==&gt; 调用<code>beforeMount</code>函数 ==&gt; 重要的钩子函数</li><li>挂载完成 ==&gt; 调用<code>mounted</code>函数</li><li>将要更新 ==&gt; 调用<code>beforeUpdate</code>函数</li><li>更新完成 ==&gt; 调用<code>updated</code>函数</li><li>将要销毁 ==&gt; 调用<code>beforeDestroy</code>函数 ==&gt; 重要的钩子函数</li><li>销毁完毕 ==&gt; 调用<code>destroyed</code>函数</li></ul><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>常用的生命周期钩子函数:</p><ul><li><code>mounted</code>: 发送<code>ajax</code>请求、启动定时任务、绑定自定义事件、订阅消息等初始化操作</li><li><code>beforeDestroy</code>: 清除定时器、解绑自定义事件、取消订阅消息等收尾工作</li></ul><p>关于销毁<code>Vue</code>实例:</p><ul><li>销毁后借助<code>Vue</code>开发者工具看不到任何信息</li><li>销毁后自定义事件会失效, 但原生<code>DOM</code>事件依然有效</li><li>一般不会在<code>beforeDestroy</code>中操作数据, 即使操作数据也不会再触发更新流程</li></ul>',14)]))}const h=o(l,[["render",i]]);export{_ as __pageData,h as default};
