import{_ as o,c,o as d,ag as i}from"./chunks/framework.ko2zIC2c.js";const h=JSON.parse('{"title":"Vue3 简介","description":"Vue3, Vue3简介, Vue.js, Vue3教程, Vue3从入门到精通","frontmatter":{"title":"Vue3 简介","description":"Vue3, Vue3简介, Vue.js, Vue3教程, Vue3从入门到精通"},"headers":[],"relativePath":"docs/frontend/vue/core/v3/01-introduction.md","filePath":"docs/frontend/vue/core/v3/01-introduction.md","lastUpdated":1754230825000}'),a={name:"docs/frontend/vue/core/v3/01-introduction.md"};function t(l,e,r,u,n,s){return d(),c("div",null,e[0]||(e[0]=[i('<h1 id="vue3-简介" tabindex="-1">Vue3 简介 <a class="header-anchor" href="#vue3-简介" aria-label="Permalink to &quot;Vue3 简介&quot;">​</a></h1><p>2020 年 9 月 18 日, <code>Vue.js</code>发布<code>3.0</code>版本, 代号: <code>One Piece</code></p><p>经历了<code>4800+</code>此提交, <code>40+</code>个<code>RFC</code>, <code>600+</code>次<code>PR</code>, <code>300+</code>贡献者</p><h2 id="性能的提升" tabindex="-1">性能的提升 <a class="header-anchor" href="#性能的提升" aria-label="Permalink to &quot;性能的提升&quot;">​</a></h2><ul><li>打包大小减少<code>40%</code></li><li>此次渲染快<code>55%</code>, 更新渲染快<code>133%</code></li><li>内存减少<code>54%</code></li></ul><h2 id="源码的升级" tabindex="-1">源码的升级 <a class="header-anchor" href="#源码的升级" aria-label="Permalink to &quot;源码的升级&quot;">​</a></h2><ul><li>使用<code>Proxy</code>代替<code>defineProperty</code>实现响应式</li><li>重写虚拟<code>DOM</code>的实现和<code>Tree-Shaking</code></li></ul><h2 id="拥抱-typescript" tabindex="-1">拥抱 TypeScript <a class="header-anchor" href="#拥抱-typescript" aria-label="Permalink to &quot;拥抱 TypeScript&quot;">​</a></h2><ul><li><code>Vue3</code>可以更好的支持<code>TypeScript</code></li></ul><h2 id="新特性" tabindex="-1">新特性 <a class="header-anchor" href="#新特性" aria-label="Permalink to &quot;新特性&quot;">​</a></h2><p><code>Compostion API</code>(组合<code>API</code>):</p><ul><li><code>setup</code></li><li><code>ref</code>与<code>reactive</code></li><li><code>computed</code>与<code>watch</code></li></ul><p>新的内置组件:</p><ul><li><code>Fragment</code></li><li><code>Teleport</code></li><li><code>Suspense</code></li></ul><p>其他变化:</p><ul><li>新的生命周期钩子函数</li><li><code>data</code>选项应始终被声明为一个函数</li><li>移除<code>keyCode</code>支持作为<code>v-on</code>的修饰符</li></ul>',16)]))}const _=o(a,[["render",t]]);export{h as __pageData,_ as default};
