import{_ as e,c as r,o as a,ag as l}from"./chunks/framework.ko2zIC2c.js";const n="/images/html/browser.png",i="/images/html/work.png",b=JSON.parse('{"title":"浏览器介绍","description":"浏览器介绍, 什么是浏览器, HTML教程","frontmatter":{"title":"浏览器介绍","description":"浏览器介绍, 什么是浏览器, HTML教程"},"headers":[],"relativePath":"docs/frontend/html/core/02-browser.md","filePath":"docs/frontend/html/core/02-browser.md","lastUpdated":1753693356000}'),o={name:"docs/frontend/html/core/02-browser.md"};function s(d,t,c,p,g,h){return a(),r("div",null,t[0]||(t[0]=[l('<h1 id="浏览器介绍" tabindex="-1">浏览器介绍 <a class="header-anchor" href="#浏览器介绍" aria-label="Permalink to &quot;浏览器介绍&quot;">​</a></h1><h2 id="常见的浏览器" tabindex="-1">常见的浏览器 <a class="header-anchor" href="#常见的浏览器" aria-label="Permalink to &quot;常见的浏览器&quot;">​</a></h2><p>浏览器是网页运行的平台，常见的浏览器有谷歌(Chrome)、Safari、火狐(Firefox)、IE、Edge、Opera等, 下图是 <a href="https://www.w3counter.com/trends" target="_blank" rel="noreferrer">W3C</a> 统计的网页浏览器使用趋势图:</p><p><img src="'+n+'" alt="browser"></p><p>由此可见, 重点需要学习的是 <strong>Chrome 浏览器</strong></p><h2 id="浏览器的组成" tabindex="-1">浏览器的组成 <a class="header-anchor" href="#浏览器的组成" aria-label="Permalink to &quot;浏览器的组成&quot;">​</a></h2><p>浏览器分成两部分:</p><ol><li>渲染引擎, 即: 浏览器内核</li><li>JS 引擎</li></ol><h3 id="渲染引擎-浏览器内核" tabindex="-1">渲染引擎(浏览器内核) <a class="header-anchor" href="#渲染引擎-浏览器内核" aria-label="Permalink to &quot;渲染引擎(浏览器内核)&quot;">​</a></h3><p>浏览器所采用的<strong>渲染引擎</strong>也称之为<strong>浏览器内核</strong>, 用于解析 HTML 和 CSS、布局、渲染等工作, 渲染引擎决定了浏览器如何显示网页的内容以及页面的格式信息</p><p>因此, <strong>渲染引擎是浏览器兼容性问题出现的根本原因</strong></p><p>渲染引擎的英文叫做 Rendering Engine, 通俗来说, 它的作用就是: 读取网页内容, 计算网页的显示方式并显示在页面上</p><p>常见浏览器的内核如下：</p><table tabindex="0"><thead><tr><th style="text-align:center;">浏览器</th><th style="text-align:center;">内核</th></tr></thead><tbody><tr><td style="text-align:center;">chrome</td><td style="text-align:center;">Blink</td></tr><tr><td style="text-align:center;">Opera</td><td style="text-align:center;">Blink</td></tr><tr><td style="text-align:center;">360 安全浏览器</td><td style="text-align:center;">Blink</td></tr><tr><td style="text-align:center;">360 极速浏览器</td><td style="text-align:center;">Blink</td></tr><tr><td style="text-align:center;">Safari</td><td style="text-align:center;">Webkit</td></tr><tr><td style="text-align:center;">Firefox 火狐</td><td style="text-align:center;">Gecko</td></tr><tr><td style="text-align:center;">IE</td><td style="text-align:center;">Trident</td></tr></tbody></table><div class="info custom-block"><p class="custom-block-title">备注</p><p>360 的浏览器, 以前使用的 IE 浏览器的 Trident 内核, 但是现在已经改为使用 chrome 浏览器的 Blink 内核</p></div><h3 id="js-引擎" tabindex="-1">JS 引擎 <a class="header-anchor" href="#js-引擎" aria-label="Permalink to &quot;JS 引擎&quot;">​</a></h3><p>也称为 JS 解释器, 用来解析和执行网页中的 JavaScript 代码</p><p>浏览器本身并不会执行JS代码, 而是通过内置 JavaScript 引擎(解释器) 来执行 JS 代码</p><p>JS 引擎执行代码时会逐行解释每一句源码, 转换为机器语言, 然后由计算机去执行</p><p>常见浏览器的 JS 引擎如下:</p><table tabindex="0"><thead><tr><th style="text-align:center;">浏览器</th><th style="text-align:left;">JS 引擎</th></tr></thead><tbody><tr><td style="text-align:center;">chrome、Opera</td><td style="text-align:left;">V8</td></tr><tr><td style="text-align:center;">Mozilla Firefox 火狐</td><td style="text-align:left;">SpiderMonkey（1.0-3.0）/ TraceMonkey（3.5-3.6）/ JaegerMonkey（4.0-）</td></tr><tr><td style="text-align:center;">Safari</td><td style="text-align:left;">JavaScriptCore, 也称为 Nitro, 是 WebKit 引擎的一部分</td></tr><tr><td style="text-align:center;">IE</td><td style="text-align:left;">Trident</td></tr><tr><td style="text-align:center;">Edge</td><td style="text-align:left;">Chakra, 此外, ChakraCore是Chakra 的开源版本, 可以在不同的平台上使用</td></tr><tr><td style="text-align:center;">Opera</td><td style="text-align:left;">Linear A（4.0-6.1）/ Linear B（7.0-9.2）/ Futhark（9.5-10.2）/ Carakan（10.5-）</td></tr></tbody></table><div class="info custom-block"><p class="custom-block-title">补充说明</p><ul><li>SpiderMonkey 是第一款 JavaScript 引擎, 由 JS 语言的作者 Brendan Eich 开发</li><li>先以WebKit为例, WebKit上由两部分组成: <ul><li>WebCore: 负责解析 HTML 和 CSS、布局、渲染等工作</li><li>JavaScriptCore: 负责解析和执行 JavaScript 代码</li></ul></li></ul></div><h2 id="浏览器工作原理" tabindex="-1">浏览器工作原理 <a class="header-anchor" href="#浏览器工作原理" aria-label="Permalink to &quot;浏览器工作原理&quot;">​</a></h2><p>这一节有些深入, 小白可以暂时跳过, 以后学习JS的时候再回来看</p><p>浏览器主要由下面这个七个部分组成:</p><p><img src="'+i+'" alt="work"></p><ol><li><strong>User Interface(UI界面)</strong>: 包括地址栏、前进/后退按钮、书签菜单等, 也就是浏览器主窗口之外的其他部分</li><li><strong>Browser engine(浏览器引擎)</strong>: 用来查询和操作渲染引擎, 是UI界面和渲染引擎之间的<strong>桥梁</strong></li><li><strong>Rendering engine(渲染引擎)</strong>: 用于解析 HTML 和 CSS, 并将解析后的内容显示在浏览器上</li><li><strong>Networking(网络模块)</strong>: 用于发送网络请求</li><li><strong>JavaScript Interpreter(JavaScript解析器)</strong>: 用于解析和执行 JavaScript 代码</li><li><strong>UI Backend(UI后端)</strong>: 用于绘制组合框、弹窗等窗口小组件, 它会调用操作系统的 UI 方法</li><li><strong>Data Persistence(数据存储模块)</strong>: 比如数据存储 cookie、HTML5 中的 localStorage 和 sessionStorage</li></ol><p>参考链接:</p><ul><li><p>英文版：<a href="https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/" target="_blank" rel="noreferrer">How Browsers Work: Behind the scenes of modern web browsers</a></p></li><li><p>中文版：<a href="https://www.html5rocks.com/zh/tutorials/internals/howbrowserswork/" target="_blank" rel="noreferrer">浏览器的工作原理：新式网络浏览器幕后揭秘</a></p></li></ul>',29)]))}const k=e(o,[["render",s]]);export{b as __pageData,k as default};
